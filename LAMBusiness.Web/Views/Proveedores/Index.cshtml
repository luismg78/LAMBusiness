@model IEnumerable<LAMBusiness.Shared.Contacto.Proveedor>

@{
    ViewData["Title"] = "Proveedores";
}

<div class="modal-content border-0 box-shadow">
    <div class="modal-header pb-0 align-items-baseline">
        <div>
            <h3 class="modal-title" id="exampleModalLabel">Proveedores</h3>
            <ul class="breadcrumb bg-transparent p-0 small">
                <li class="breadcrumb-item"><a asp-action="Contacto" asp-controller="Menu">Contactos</a></li>
                <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Proveedores">Proveedores</a></li>
                <li class="breadcrumb-item active text-base">@Model.Count() Registro(s)</li>
            </ul>
        </div>
        <a asp-action="Contacto" asp-controller="Menu" class="btn-close me-md-1" aria-label="Close"></a>
    </div>
    <div class="modal-body pt-4">
        <div class="row px-md-3">
            <div class="col-9 col-md-8 pr-0 pr-md-3">
                <div class="input-group mb-3">
                    <input type="search" id="SearchInput" class="form-control" placeholder="Buscar..." onkeypress="search(event);">
                    <button class="btn btn-light border" type="button" onclick="search(event);"><i class="fa fa-search"></i></button>
                </div>
            </div>
            <div class="col-3 col-md-4 text-end">
                @if (Convert.ToBoolean(ViewBag.PermisoEscritura))
                {
                    <p><a asp-action="Create" class="btn btn-base"><i class="fas fa-plus"></i><span class="d-none d-md-inline-block ms-2">Nuevo Registro</span></a></p>
                }
            </div>
        </div>
        <div>
            <div class="row px-md-3 fw-bold text-uppercase">
                <div class="border-bottom col-12 px-3 py-2">
                    @Html.DisplayNameFor(model => model.ProveedorID)
                </div>
            </div>
            <div class="row px-md-3" id="dRows" data-charging="0" data-rows-next="1">
                @foreach (var item in Model.Take(50))
                {
                    <div class="col-12 border-bottom">
                        <div class="row">
                            <div class="col-md-6 p-3">
                                <span class="fw-bold text-dark">@Html.DisplayFor(modelItem => item.Nombre)</span>
                                <div class="d-block">
                                    <small class="d-block text-muted">@Html.DisplayFor(modelItem => item.RFC)</small>
                                    <small class="d-block text-muted">
                                        @Html.DisplayFor(modelItem => item.Domicilio),
                                        @Html.DisplayFor(modelItem => item.Colonia)&nbsp;
                                        @Html.DisplayFor(modelItem => item.CodigoPostal),
                                        @Html.DisplayFor(modelItem => item.Municipios.MunicipioDescripcion),
                                        @Html.DisplayFor(modelItem => item.Municipios.Estados.EstadoDescripcion)
                                    </small>
                                    <small class="d-block text-muted">Contactos: @item.ProveedorContactos.Count</small>
                                    @if (!item.Activo)
                                    {
                                        <small class="badge border border-danger text-danger fw-normal">No Disponible</small>
                                    }
                                </div>
                            </div>
                            <div class="col-md-6 px-3 py-2 text-end">
                                <div>
                                    @if (!string.IsNullOrEmpty(item.Telefono))
                                    {
                                        <small class="d-block fw-normal text-muted text-start text-md-end">
                                            <i class="fa fa-phone me-2"></i>
                                            <a href="tel:@Html.DisplayFor(modelItem => item.Telefono)">@Html.DisplayFor(modelItem => item.Telefono)</a>
                                        </small>
                                    }
                                    <small class="d-block fw-normal text-muted text-start text-md-end"><i class="fa fa-envelope me-2"></i>@Html.DisplayFor(modelItem => item.Email)</small>
                                    <small class="d-block fw-normal text-muted text-start text-md-end" title="Fecha de registro"><i class="fa fa-calendar me-2"></i>@item.FechaRegistro.ToString("dd MMMM, yyyy")</small>
                                </div>
                                <div class="mt-md-2">
                                    <a asp-action="Details" asp-route-id="@item.ProveedorID" class="d-inline-block text-decoration-none">
                                        <div class="btn-icon rounded-circle" data-bs-toggle="tooltip" data-bs-trigger="hover" data-bs-placement="bottom" title="ver detalle">
                                            <i class="fa fa-file-alt"></i>
                                        </div>
                                    </a>
                                    @if (Convert.ToBoolean(ViewBag.PermisoEscritura))
                                    {
                                        <a asp-action="Edit" asp-route-id="@item.ProveedorID" class="d-inline-block text-decoration-none">
                                            <div class="btn-icon rounded-circle" data-bs-toggle="tooltip" data-bs-trigger="hover" data-bs-placement="bottom" title="editar registro">
                                                <i class="fa fa-edit"></i>
                                            </div>
                                        </a>
                                        <a href="#" data-id="@item.ProveedorID" class="d-inline-block deleteConfirm text-decoration-none" data-bs-toggle="modal" data-bs-target="#deleteConfirm">
                                            <div class="btn-icon rounded-circle" data-bs-toggle="tooltip" data-bs-trigger="hover" data-bs-placement="bottom" title="eliminar registro">
                                                <i class="fa fa-trash"></i>
                                            </div>
                                        </a>
                                    }
                                </div>
                            </div>
                        </div>

                    </div>
                }
            </div>
        </div>
    </div>
</div>

@if (Convert.ToBoolean(ViewBag.PermisoEscritura))
{
    <partial name="_DeleteConfirmDialog" />
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        var skip = 0;
        var itemToDelete;

        $(document).ready(function () {
            $(window).on("scroll", function () {
                if ($('#dRows')[0] !== this.undefined &&
                    $('#dRows').attr('data-rows-next') === "1" &&
                    $('#dRows').attr('data-charging') === "0")
                {
                    var scrollHeight = $(document).height();
                    var scrollPosition = $(window).height() + $(window).scrollTop();
                    var result = (scrollHeight - scrollPosition) / scrollHeight;
                    if (result <= 0.0005) {
                        skip += 50;
                        addRowsNext(skip);
                    }
                }
            });

            $('.deleteConfirm').click((e) => {
                itemToDelete = e.currentTarget.dataset.id;
            });

            $("#DeleteYesButton").click((e) => {
                window.location.href = '@Url.Action("Delete", "Proveedores")' + '/' + itemToDelete;
            });
        });

        function addRowsNext(skip, inicio = false) {
            addProcessWithSpinner('Cargando Proveedores...');
            $('#dRows').attr('data-charging', "1");
            var searchBy = $('#SearchInput')[0] === undefined ? "" : $('#SearchInput').val();
            $.ajax({
                url: '@Url.Action("_AddRowsNext","Proveedores")',
                method: 'POST',
                datatype: 'text',
                data: {
                    searchby: searchBy,
                    skip: skip
                },
                success: function (r) {
                    if (inicio) { $('#dRows').empty(); }
                    if (r !== null && r.trim() !== '') {
                        $('#dRows').append(r);
                        $('[data-bs-toggle="tooltip"]').tooltip();
                    } else {
                        $('#dRows').attr('data-rows-next', "0");
                    }
                    $('#dRows').attr('data-charging', "0");
                    removeProcessWithSpinner();
                },
                error: function (r) {
                    $('#dRows').attr('data-charging', "0");
                    removeProcessWithSpinner();
                },
                cache: false
            });
        }

        function search(e) {
            if (e.keyCode === 13 || e.which === 1) {
                skip = 0;
                $('#dRows').attr('data-rows-next', "1");
                addRowsNext(skip, true);
            }
        }
    </script>
}
