@model LAMBusiness.Shared.Aplicacion.Filtro<List<LAMBusiness.Web.Models.ViewModels.RetirosViewModel>>

@if (Model != null)
{
    <div id="dRowRetiro" data-charging="0" data-rows-next="1" data-retiros="0">
        @if (Model.Skip == 0)
        {
            <div class="row px-md-3">
                <div class="border-bottom col-8 p-3">
                    <div class="fw-bold text-uppercase">Usuarios</div>
                </div>
                <small class="border-bottom col-4 p-3 text-muted text-end">
                    @Model.Registros.ToString("#,###,##0") Registro(s).
                </small>
            </div>
        }
        <div class="px-md-3">
            @{
                string pendiente;
                @foreach (var item in Model.Datos)
                {
                    pendiente = "text-muted";
                    if (item.VentaPendiente == null || item.VentaPendiente == Guid.Empty)
                    {
                        pendiente = "text-danger";
                    }
                    <div class="row bg-row">
                        <div class="border-bottom col-2 col-lg-1 py-3 px-0 text-center">
                            <img class="rounded-circle" style="width:3rem;" src="@Url.Action("GetProfilePicture", "Sesion", new { id = item.UsuarioID, tipo = "profile" })" alt="Image Profile" />
                        </div>
                        <div class="border-bottom col-10 col-md-7 col-lg-8 py-3 px-2 px-lg-1">
                            <span class="text-dark text-capitalize">
                                @Html.DisplayFor(modelItem => item.PrimerApellido)
                                @Html.DisplayFor(modelItem => item.SegundoApellido)
                                @Html.DisplayFor(modelItem => item.Nombre)
                            </span>
                            <div class="d-block">
                                <small class="text-muted me-md-3">@Html.DisplayFor(modelItem => item.Fecha)</small>
                                @if (item.VentaPendiente == null || item.VentaPendiente == Guid.Empty)
                                {
                                    <small class="badge bg-danger fw-normal">Pendiente de cierre</small>
                                }else{
                                    <small class="badge bg-light border fw-normal text-dark">Cerrado</small>
                                }
                            </div>
                        </div>
                        <div class="border-bottom col-12 col-md-3 py-2 p-md-3 text-end">
                            <h5 class="@pendiente">@item.Importe.ToString("$#,###,##0.00")</h5>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
}